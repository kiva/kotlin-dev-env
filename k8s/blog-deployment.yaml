apiVersion: apps/v1
kind: Deployment
metadata:
  name: blog-deployment
spec:
  selector:
    matchLabels:
      app: blog
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: blog
    spec:
      containers:
      - env:
        - name: SPRING_CONFIG_ADDITIONAL-LOCATION
          value: "file:./secrets/"
        image: kiva/kiosa-dev:latest #We'll eventually want to be smarter with our tagging and not rely on latest
        name: blog
        volumeMounts:
        - name: blog-config
          mountPath: "/root/config" # needs to be under /root, this automatically searched by spring boot
          readOnly: true
        - name: blog-secrets
          mountPath: "/root/secrets" # this is configured via env variable above
          readOnly: true
        ports:
        - containerPort: 8080
        resources: {}
        readinessProbe:
          httpGet:
            path: "/graphql?query=%7B__schema%7BqueryType%7Bname%7D%7D%7D"
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 3
        livenessProbe:
          httpGet:
            path: "/graphql?query=%7B__schema%7BqueryType%7Bname%7D%7D%7D"
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
      imagePullSecrets:
        - name: regcred # This will only work if you have set up a regcred secret containing Docker Hub credentials
      restartPolicy: Always
      volumes:
      - name: blog-config
        configMap:
          name: blog-config # kubectl create configmap blog-config --from-file=configs/blog.properties
          items:
          - key: blog.properties
            path: application.properties # filename spring boot will look for
      - name: blog-secrets
        secret:
          secretName: blog-secrets # kubectl create secret generic blog-secrets --from-file=secrets/blog.secrets.properties
          items:
          - key: blog.secrets.properties
            path: application.properties # filename spring boot will look for
status: {}
